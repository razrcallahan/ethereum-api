{"version":3,"sources":["../../src/api/ethereum.js"],"names":["config","db","api","get","req","res","json","message","wallet","generateNew","publicAddr","getPublicAddress","pvtKey","getPrivateKey","WalletFactory","createWithPublicKey","params","addr","balance","getBalance","then","catch","post","createWithPrivateKey","hash","createTransaction"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;kBAEe,gBAAoB;AAAA,QAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,QAATC,EAAS,QAATA,EAAS;;AAC/B,QAAIC,MAAM,sBAAV;;AAEAA,QAAIC,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC3BA,YAAIC,IAAJ,CAAS,EAAEC,SAAS,eAAX,EAAT;AACH,KAFD;;AAIAL,QAAIC,GAAJ,CAAQ,eAAR,EAAyB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AACvC,YAAIG,SAASC,aAAb;AACAJ,YAAIC,IAAJ,CAAS,EAACI,YAAYF,OAAOG,gBAAP,EAAb,EAAwCC,QAAQJ,OAAOK,aAAP,EAAhD,EAAT;AACH,KAHD;;AAKAX,QAAIC,GAAJ,CAAQ,mBAAR,EAA6B,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC3C,YAAIG,SAAS,IAAIM,uBAAJ,GAAoBC,mBAApB,CAAwCX,IAAIY,MAAJ,CAAWC,IAAnD,CAAb;;AAEA,YAAIC,UAAUV,OAAOW,UAAP,GACTC,IADS,CACJ,UAASF,OAAT,EAAiB;AACnBb,gBAAIC,IAAJ,CAAS,EAAEY,SAASA,OAAX,EAAT;AACH,SAHS,EAITG,KAJS,CAIH,UAASd,OAAT,EAAiB;AACpBF,gBAAIC,IAAJ,CAAS,EAAEY,SAAS,OAAX,EAAoBX,SAASA,OAA7B,EAAT;AACH,SANS,CAAd;AAOH,KAVD;;AAYAL,QAAIoB,IAAJ,CAAS,cAAT,EAAyB,UAASlB,GAAT,EAAcC,GAAd,EAAkB;AACvC,YAAIG,SAAS,IAAIM,uBAAJ,GAAoBS,oBAApB,CAAyC,kEAAzC,CAAb;;AAEA,YAAIC,OAAOhB,OAAOiB,iBAAP,CAAyB,4CAAzB,EACP,MADO,EACC,KADD,EACQ,EADR,CAAX;AAGH,KAND;;AAQA,WAAOvB,GAAP;AACH,C","file":"ethereum.js","sourcesContent":["import { Router } from 'express';\nimport transaction from '../models/transaction';\nimport WalletFactory from '../models/wallet-factory';\n\nexport default ({ config, db }) => {\n    let api = Router();\n\n    api.get('/', function(req, res){\n        res.json({ message: 'do something!' });\n    });\n\n    api.get('/createWallet', function(req, res){\n        let wallet = generateNew();\n        res.json({publicAddr: wallet.getPublicAddress(), pvtKey: wallet.getPrivateKey()});\n    });\n\n    api.get('/getBalance/:addr', function(req, res){\n        let wallet = new WalletFactory().createWithPublicKey(req.params.addr);\n\n        let balance = wallet.getBalance()\n            .then(function(balance){\n                res.json({ balance: balance });\n            })\n            .catch(function(message){\n                res.json({ balance: \"error\", message: message})\n            });\n    });\n\n    api.post('/transaction', function(req, res){\n        let wallet = new WalletFactory().createWithPrivateKey(\"afa66611fcd87fe2939f2dbace769512f14e7147288577c6f6735bb8aa955ce7\");\n\n        let hash = wallet.createTransaction(\"0xeF19E7Ec9eE90a0426c60E74aFCc504C02513E11\",\n            \"0.01\", 21000, 20);\n\n    });\n\n    return api;\n};\n\n"]}